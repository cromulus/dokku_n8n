# Generated by nginxconfig.io
# See nginxconfig.txt for the configuration share link

user                 nginx;
pid                  /var/run/nginx.pid;
worker_processes     auto;
worker_rlimit_nofile 65535;

# Load modules
include              /etc/nginx/modules-enabled/*.conf;

events {
    multi_accept       on;
    worker_connections 65535;
}

http {
    charset                utf-8;
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    log_not_found          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   16M;

    # MIME
    include                mime.types;
    default_type           application/octet-stream;

    # # Logging
    # access_log             /var/log/nginx/access.log;
    # error_log              /var/log/nginx/error.log warn;

    # # Limits
    # limit_req_log_level    warn;
    # limit_req_zone         $binary_remote_addr zone=login:10m rate=10r/m;

    # # SSL
    # ssl_session_timeout    1d;
    # ssl_session_cache      shared:SSL:10m;
    # ssl_session_tickets    off;

    # # Diffie-Hellman parameter for DHE ciphersuites
    # ssl_dhparam            /etc/nginx/dhparam.pem;

    # # Mozilla Intermediate configuration
    # ssl_protocols          TLSv1.2 TLSv1.3;
    # ssl_ciphers            ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # # OCSP Stapling
    # ssl_stapling           on;
    # ssl_stapling_verify    on;
    # resolver               1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
    # resolver_timeout       2s;

    # Connection header for WebSocket reverse proxy
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ""      close;
    }

    map $remote_addr $proxy_forwarded_elem {

        # IPv4 addresses can be sent as-is
        ~^[0-9.]+$        "for=$remote_addr";

        # IPv6 addresses need to be bracketed and quoted
        ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";

        # Unix domain socket names cannot be represented in RFC 7239 syntax
        default           "for=unknown";
    }

    map $http_forwarded $proxy_add_forwarded {

        # If the incoming Forwarded header is syntactically valid, append to it
        "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

        # Otherwise, replace it
        default "$proxy_forwarded_elem";
    }

    # Load configs
    include /etc/nginx/conf.d/*.conf;

    # example.com
    server {
        listen                               80 default_server;
        server_name                          _;

        # # SSL
        # ssl_certificate                      /etc/letsencrypt/live/example.com/fullchain.pem;
        # ssl_certificate_key                  /etc/letsencrypt/live/example.com/privkey.pem;
        # ssl_trusted_certificate              /etc/letsencrypt/live/example.com/chain.pem;

        # # security headers
        # add_header X-XSS-Protection          "1; mode=block" always;
        # add_header X-Content-Type-Options    "nosniff" always;
        # add_header Referrer-Policy           "no-referrer-when-downgrade" always;
        # add_header Content-Security-Policy   "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
        # add_header Permissions-Policy        "interest-cohort=()" always;
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # . files
        location ~ /\.(?!well-known) {
            deny all;
        }

        # security.txt
        location /security.txt {
            return 301 /.well-known/security.txt;
        }

        location = /.well-known/security.txt {
            alias ~/security.txt;
        }

        # # index.php fallback
        # location ~ ^/api/ {
        #     try_files $uri $uri/ /index.php?$query_string;
        # }

        # reverse proxy
        location / {
            proxy_pass                         http://n8n-main-single-instance-only:5678;
            proxy_set_header Host              $host;
            proxy_http_version                 1.1;
            proxy_cache_bypass                 $http_upgrade;

            # Proxy headers
            proxy_set_header Upgrade           $http_upgrade;
            proxy_set_header Connection        $connection_upgrade;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header Forwarded         $proxy_add_forwarded;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Port  $server_port;

            # Proxy timeouts
            proxy_connect_timeout              60s;
            proxy_send_timeout                 60s;
            proxy_read_timeout                 60s;
        }
        location /webhook/ {
            proxy_pass                         http://n8n-webhooks:5678;
            proxy_set_header Host              $host;
            proxy_http_version                 1.1;
            proxy_cache_bypass                 $http_upgrade;

            # Proxy headers
            proxy_set_header Upgrade           $http_upgrade;
            proxy_set_header Connection        $connection_upgrade;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header Forwarded         $proxy_add_forwarded;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Port  $server_port;

            # Proxy timeouts
            proxy_connect_timeout              60s;
            proxy_send_timeout                 60s;
            proxy_read_timeout                 60s;
        }
        location /nginx_status {
 	        return 200;
          access_log off;
        }

        # # favicon.ico
        # location = /favicon.ico {
        #     log_not_found off;
        #     access_log    off;
        # }

        # # robots.txt
        # location = /robots.txt {
        #     log_not_found off;
        #     access_log    off;
        # }

        # # assets, media
        # location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
        #     expires    7d;
        #     access_log off;
        # }

        # # svg, fonts
        # location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
        #     add_header Access-Control-Allow-Origin "*";
        #     expires    7d;
        #     access_log off;
        # }

        # gzip
        gzip            on;
        gzip_vary       on;
        gzip_proxied    any;
        gzip_comp_level 6;
        gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
    }

    # # subdomains redirect
    # server {
    #     listen                  443 ssl http2;
    #     listen                  [::]:443 ssl http2;
    #     server_name             *.example.com;

    #     # SSL
    #     ssl_certificate         /etc/letsencrypt/live/example.com/fullchain.pem;
    #     ssl_certificate_key     /etc/letsencrypt/live/example.com/privkey.pem;
    #     ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;
    #     return                  301 https://example.com$request_uri;
    # }

    # HTTP redirect
    # server {
    #     listen      80;
    #     listen      [::]:80;
    #     server_name .example.com;

    #     # ACME-challenge
    #     location ^~ /.well-known/acme-challenge/ {
    #         root /var/www/_letsencrypt;
    #     }

    #     location / {
    #         return 301 https://example.com$request_uri;
    #     }
    # }
}